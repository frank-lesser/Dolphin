| package |
package := Package name: 'Source Tracking System'.
package paxVersion: 1;
	basicComment: 'Source Tracking System 3.4 for Dolphin Smalltalk 6.1
--
Copyright (C) 2000-2010 David Gorisek <david@gorisek.com> or <david.gorisek@e-racuni.com>
Copyright (C) 2001-2010 IT consulting Gorisek d.o.o. ALL RIGHTS RESERVED

Check http://www.gorisek.com for the latest version of this package.

To install STS or create/connect/reconnect to repository evaluate:

	StsManager install.

To create a new repository in the directory where your image is located evaluate:

	StsManager current createRepositoryOn: StsManager defaultRepositoryPath.

To connect or reconnect to this repository evaluate:

	StsManager startUp.

To connect to some other repository (e.g. to a shared repository on a network server for multi-user development) evaluate:

	StsManager startUpOn: <directory>.

'.

package basicPackageVersion: '6.1.10'.

package basicScriptAt: #preuninstall put: 'StsManager shutdown.
'.

package classNames
	add: #StsAbstractClassEditionChangeNode;
	add: #StsBase64EncoderDecoder;
	add: #StsBehaviorProxy;
	add: #StsChangedBlessingNode;
	add: #StsChangedClassClassDefinitionNode;
	add: #StsChangedClassCommentNode;
	add: #StsChangedClassDefinitionNode;
	add: #StsChangedClassNode;
	add: #StsChangedCommentNode;
	add: #StsChangedLooseMethodNode;
	add: #StsChangedManualPrerequisitesNode;
	add: #StsChangedMethodNode;
	add: #StsChangedPackageCommentNode;
	add: #StsChangedPackageVersionCommentNode;
	add: #StsChangedPrerequisitesNode;
	add: #StsChangedResourceNode;
	add: #StsChangeNode;
	add: #StsChangeNodesComparisonJob;
	add: #StsChangeSet;
	add: #StsClassEdition;
	add: #StsClassEditionsBrowserShell;
	add: #StsClassProxy;
	add: #StsComparisonBrowser;
	add: #StsCompiledMethodProxy;
	add: #StsDifferencesPresenter;
	add: #StsDolphinPackageProxy;
	add: #StsDolphinResourceProxy;
	add: #StsEdition;
	add: #StsImportInformationDialog;
	add: #StsImportInformationModel;
	add: #StsImportProxy;
	add: #StsManager;
	add: #StsMetaClassProxy;
	add: #StsMethodComparisonShell;
	add: #StsMethodEdition;
	add: #StsMethodEditionsBrowserShell;
	add: #StsMethodVersionNotification;
	add: #StsMultilinePrompter;
	add: #StsPackageEdition;
	add: #StsPackageEditionPrompter;
	add: #StsPackageEditionsBrowserShell;
	add: #StsPackageManager;
	add: #StsPackageProxy;
	add: #StsProjectBrowserShell;
	add: #StsProjectEdition;
	add: #StsProjectEditionSelectionDialog;
	add: #StsProjectProxy;
	add: #StsResourceEdition;
	add: #StsSourceComparisonModel;
	add: #StsSqueakChangeSetProxy;
	add: #StsSqueakMonticelloPackageImporter;
	add: #StsSqueakPackageProxy;
	add: #StsStbProxy;
	add: #StsStoredChangeSetsBrowserShell;
	add: #StsToBeMergedChangeSet;
	add: #StsVastPackageProxy;
	add: #StsVersionTreeDiagram;
	add: #StsVisualWorksParcelPackageProxy;
	add: #StsXMLPackageProxy;
	add: #StsXmlWriter;
	yourself.

package methodNames
	add: #Class -> #metaClass;
	add: #ClassBrowserAbstract -> #browseAvailableMethods;
	add: #ClassBrowserAbstract -> #browseClassEditions;
	add: #ClassBrowserAbstract -> #compareClass;
	add: #ClassBrowserAbstract -> #queryStsCommand:;
	add: #ClassSelector -> #browseClassEditions;
	add: #ClassSelector -> #compareClass;
	add: #ClassSelector -> #queryStsCommand:;
	add: #Debugger -> #browseMethodEditions;
	add: #Debugger -> #queryStsCommand:;
	add: #Dialog -> #sourceControl;
	add: #MethodBrowser -> #browseMethodEditions;
	add: #MethodBrowser -> #queryStsCommand:;
	add: #Package -> #odbSerialize:;
	add: #PackageBrowserShell -> #browseLooseMethodEditions;
	add: #PackageBrowserShell -> #queryStsCommand:;
	add: #PackageSelector -> #browsePackageEditions;
	add: #PackageSelector -> #compareWithAnotherEdition;
	add: #PackageSelector -> #queryStsCommand:;
	add: #PackageSelector -> #versionPackage;
	add: #SmalltalkSystem -> #sourceTrackingToolsFolder;
	add: #SmalltalkToolShell -> #importPackageFromFile;
	add: #SmalltalkToolShell -> #loadPackageFromRepository;
	add: #SourceManager -> #ignoreSeparators:;
	add: #SourceManager -> #nextItem:;
	add: #SourceManager -> #nextItem:separatorIn:separatorOut:;
	add: #SourceManager -> #nextItem:timesRepeat:;
	add: #SourceManager -> #nextString:;
	add: #String -> #byteCompare:;
	yourself.

package binaryGlobalNames: (Set new
	yourself).

package globalAliases: (Set new
	yourself).

package setPrerequisites: (IdentitySet new
	add: '..\..\Object Arts\Dolphin\IDE\Base\Development System';
	add: '..\..\Object Arts\Dolphin\Base\Dolphin';
	add: '..\..\Object Arts\Dolphin\MVP\Views\Cards\Dolphin Card Containers';
	add: '..\..\Object Arts\Dolphin\MVP\Presenters\Prompters\Dolphin Choice Prompter';
	add: '..\..\Object Arts\Dolphin\MVP\Views\Common Controls\Dolphin Common Controls';
	add: '..\..\Object Arts\Dolphin\MVP\Dialogs\Common\Dolphin Common Dialogs';
	add: '..\..\Object Arts\Dolphin\MVP\Views\Control Bars\Dolphin Control Bars';
	add: '..\..\Object Arts\Dolphin\MVP\Presenters\Difference\Dolphin Differences Presenter';
	add: '..\..\Object Arts\Dolphin\Base\Deprecated\Dolphin Legacy Resource Framework';
	add: '..\..\Object Arts\Dolphin\MVP\Models\List\Dolphin List Models';
	add: '..\..\Object Arts\Dolphin\MVP\Presenters\List\Dolphin List Presenter';
	add: '..\..\Object Arts\Dolphin\MVP\Views\MoenTree\Dolphin MoenTree View';
	add: '..\..\Object Arts\Dolphin\MVP\Deprecated\Dolphin MVP (Deprecated)';
	add: '..\..\Object Arts\Dolphin\MVP\Base\Dolphin MVP Base';
	add: '..\..\Object Arts\Dolphin\MVP\Dialogs\Progress\Dolphin Progress Dialog';
	add: '..\..\Object Arts\Dolphin\MVP\Presenters\Prompters\Dolphin Prompter';
	add: '..\..\Object Arts\Dolphin\MVP\Presenters\Radio\Dolphin Radio Buttons';
	add: '..\..\Object Arts\Dolphin\MVP\Presenters\Text\Dolphin Rich Text Presenter';
	add: '..\..\Object Arts\Dolphin\MVP\Views\Scintilla\Dolphin Scintilla View';
	add: '..\..\Object Arts\Dolphin\MVP\Views\Scrollbars\Dolphin Scrollbars';
	add: '..\..\Object Arts\Dolphin\MVP\Presenters\Text\Dolphin Text Presenter';
	add: '..\..\Object Arts\Dolphin\MVP\Models\Tree\Dolphin Tree Models';
	add: '..\..\Object Arts\Dolphin\MVP\Presenters\Tree\Dolphin Tree Presenter';
	add: '..\..\Object Arts\Dolphin\MVP\Type Converters\Dolphin Type Converters';
	add: '..\..\Object Arts\Dolphin\MVP\Models\Value\Dolphin Value Models';
	add: 'OmniBase';
	add: '..\..\Object Arts\Dolphin\ActiveX\Shell\Windows Shell';
	add: '..\..\Object Arts\Dolphin\ActiveX\Components\XML DOM\XML DOM';
	add: 'Yaxo\YAXO DOM';
	add: 'ZLib Interface';
	yourself).

package!

"Class Definitions"!

Object subclass: #StsBase64EncoderDecoder
	instanceVariableNames: 'decodingTable'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
Object subclass: #StsChangeNode
	instanceVariableNames: 'description elementDescription leftEdition rightEdition leftSource rightSource owningPackage changeTimestamp'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
Object subclass: #StsChangeNodesComparisonJob
	instanceVariableNames: 'compareWithImageOrProjectEdition changes'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
Object subclass: #StsEdition
	instanceVariableNames: 'timestamp developer'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
Object subclass: #StsImportProxy
	instanceVariableNames: 'name developer timestamp comment version'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
Object subclass: #StsManager
	instanceVariableNames: 'repositoryPath db methodDictOIDs developer ignoreCompilerEventsFlag globalTransaction classEditions packageEditions currentServerURL loginData'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: 'current'!
Object subclass: #StsMethodVersionNotification
	instanceVariableNames: 'edition'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
Object subclass: #StsSourceComparisonModel
	instanceVariableNames: 'differences lines1 lines2'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
Object subclass: #StsStbProxy
	instanceVariableNames: 'bytes'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
Object subclass: #StsXmlWriter
	instanceVariableNames: 'stream ident'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
Model subclass: #StsImportInformationModel
	instanceVariableNames: 'version developer previousVersions comment previousEdition versionComment blessingLevels blessing'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
PackageManager subclass: #StsPackageManager
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
DifferencesPresenter subclass: #StsDifferencesPresenter
	instanceVariableNames: 'diffResult diffProcess'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
Dialog subclass: #StsImportInformationDialog
	instanceVariableNames: 'versionPresenter developerPresenter previousVersionsPresenter commentPresenter versionCommentPresenter blessingLevelsPresenter'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
Dialog subclass: #StsPackageEditionPrompter
	instanceVariableNames: 'packages editions result'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
Dialog subclass: #StsProjectEditionSelectionDialog
	instanceVariableNames: 'projectsPresenter projectEditionsPresenter packageEditionsPresenter'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
Prompter subclass: #StsMultilinePrompter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SmalltalkToolShell subclass: #StsClassEditionsBrowserShell
	instanceVariableNames: 'className editionsPresenter modePresenter sourcePresenter commentPresenter definitionPresenter methodsPresenter versionInfoPresenter'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SmalltalkToolShell subclass: #StsComparisonBrowser
	instanceVariableNames: 'changesPresenter removeItemOnLoad differencesPresenter'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SmalltalkToolShell subclass: #StsMethodComparisonShell
	instanceVariableNames: 'comparisonModel sourcePresenter1 sourcePresenter2 status1 status2'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SmalltalkToolShell subclass: #StsMethodEditionsBrowserShell
	instanceVariableNames: 'classObject methodSelector editionsList sourcePresenter'
	classVariableNames: ''
	poolDictionaries: 'CompilerFlags'
	classInstanceVariableNames: ''!
SmalltalkToolShell subclass: #StsPackageEditionsBrowserShell
	instanceVariableNames: 'packagesPresenter editionsPresenter classesPresenter methodsPresenter commentPresenter versionCommentPresenter sourcePresenter resourcesPresenter versionInfoPresenter scriptsPresenter globalsPresenter inspectorPresenter prerequisitesPresenter packageCards'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SmalltalkToolShell subclass: #StsProjectBrowserShell
	instanceVariableNames: 'projectsPresenter projectEditionsPresenter packageEditionsPresenter commentPresenter versionCommentPresenter'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SmalltalkToolShell subclass: #StsStoredChangeSetsBrowserShell
	instanceVariableNames: 'toDoChangeSets'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
SmalltalkToolShell subclass: #StsVersionTreeDiagram
	instanceVariableNames: 'treePresenter treeModel status'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
StsChangeNode subclass: #StsAbstractClassEditionChangeNode
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
StsChangeNode subclass: #StsChangedCommentNode
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
StsChangeNode subclass: #StsChangedMethodNode
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
StsChangeNode subclass: #StsChangedResourceNode
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
StsAbstractClassEditionChangeNode subclass: #StsChangedClassDefinitionNode
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
StsAbstractClassEditionChangeNode subclass: #StsChangedClassNode
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
StsChangedClassDefinitionNode subclass: #StsChangedClassClassDefinitionNode
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
StsChangedCommentNode subclass: #StsChangedBlessingNode
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
StsChangedCommentNode subclass: #StsChangedClassCommentNode
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
StsChangedCommentNode subclass: #StsChangedPackageCommentNode
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
StsChangedCommentNode subclass: #StsChangedPrerequisitesNode
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
StsChangedPackageCommentNode subclass: #StsChangedPackageVersionCommentNode
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
StsChangedPrerequisitesNode subclass: #StsChangedManualPrerequisitesNode
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
StsChangedMethodNode subclass: #StsChangedLooseMethodNode
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
StsEdition subclass: #StsChangeSet
	instanceVariableNames: 'changeNodes comment browserTitle blessing'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
StsEdition subclass: #StsClassEdition
	instanceVariableNames: 'name guid definition classDefinition methods classMethods comment'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
StsEdition subclass: #StsMethodEdition
	instanceVariableNames: 'classSymbol selector isPrivate categoriesString source'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
StsEdition subclass: #StsPackageEdition
	instanceVariableNames: 'name versionDescriptor comment methods classes resources globals prerequisiteNames scripts aboutBlock previousEdition imageStripperBytes versionComment pathName manualPrerequisites blessing'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
StsEdition subclass: #StsProjectEdition
	instanceVariableNames: 'name versionDescriptor packageEditions previousEdition blessing comment versionComment'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
StsEdition subclass: #StsResourceEdition
	instanceVariableNames: 'className name resource'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
StsChangeSet subclass: #StsToBeMergedChangeSet
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
StsImportProxy subclass: #StsBehaviorProxy
	instanceVariableNames: 'definition methodDictionary'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
StsImportProxy subclass: #StsCompiledMethodProxy
	instanceVariableNames: 'methodSource methodClass selector isPrivate categoriesString'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
StsImportProxy subclass: #StsDolphinResourceProxy
	instanceVariableNames: 'owningClass resource'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
StsImportProxy subclass: #StsPackageProxy
	instanceVariableNames: 'stream classes looseMethods resources globals prerequisiteNames imageStripperBytes aboutBlock scripts manualPrerequisites packagePathname versionComment blessing'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
StsImportProxy subclass: #StsProjectProxy
	instanceVariableNames: 'packages previousVersionsData blessing versionComment'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
StsImportProxy subclass: #StsSqueakChangeSetProxy
	instanceVariableNames: 'stream changes'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
StsBehaviorProxy subclass: #StsClassProxy
	instanceVariableNames: 'guid metaClass'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
StsBehaviorProxy subclass: #StsMetaClassProxy
	instanceVariableNames: 'instanceClass'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
StsPackageProxy subclass: #StsDolphinPackageProxy
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
StsPackageProxy subclass: #StsSqueakPackageProxy
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
StsPackageProxy subclass: #StsVastPackageProxy
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
StsPackageProxy subclass: #StsVisualWorksParcelPackageProxy
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
StsPackageProxy subclass: #StsXMLPackageProxy
	instanceVariableNames: 'exporterVersion'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
StsSqueakPackageProxy subclass: #StsSqueakMonticelloPackageImporter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

"Global Aliases"!


"Loose Methods"!

!Class methodsFor!

metaClass
	^self class! !
!Class categoriesFor: #metaClass!OmniBase!public! !

!ClassBrowserAbstract methodsFor!

browseAvailableMethods
	self sourceControl browseAvailableMethodsFor: self actualClass!

browseClassEditions
	self sourceControl browseClassEditions: self selectedClass name!

compareClass
	self sourceControl compareRepositoryEditionWithClass: self selectedClass!

queryStsCommand: aCommandQuery 
	| selector |
	selector := aCommandQuery commandSymbol.
	(#(#browseAvailableMethods #browseClassEditions #compareClass) identityIncludes: selector) 
		ifTrue: 
			[aCommandQuery isEnabled: (self hasClassSelected and: [self sourceControl isConnected]).
			^true].
	^false! !
!ClassBrowserAbstract categoriesFor: #browseAvailableMethods!commands!public!source tracking system! !
!ClassBrowserAbstract categoriesFor: #browseClassEditions!commands!public!source tracking system! !
!ClassBrowserAbstract categoriesFor: #compareClass!commands!operations!options!public!source tracking system! !
!ClassBrowserAbstract categoriesFor: #queryStsCommand:!commands!private! !

!ClassSelector methodsFor!

browseClassEditions
	self sourceControl browseClassEditions: self selection name
!

compareClass
	| class |
	(class := self selectionOrNil) notNil 
		ifTrue: [Package manager sourceControl compareRepositoryEditionWithClass: class]!

queryStsCommand: aCommandQuery 
	| selector |
	selector := aCommandQuery commandSymbol.
	(#(#browseClassEditions #compareClass) identityIncludes: selector) 
		ifTrue: 
			[aCommandQuery isEnabled: (self hasSelection and: [self sourceControl isConnected]).
			^true].
	^false! !
!ClassSelector categoriesFor: #browseClassEditions!commands!public!source tracking system! !
!ClassSelector categoriesFor: #compareClass!commands!public!source tracking system! !
!ClassSelector categoriesFor: #queryStsCommand:!commands!private! !

!Debugger methodsFor!

browseMethodEditions
	self sourceControl browseMethodEditions: self selectedMethod selector
		class: self selectedMethod methodClass!

queryStsCommand: aCommandQuery 
	| selector |
	selector := aCommandQuery commandSymbol.
	#browseMethodEditions == selector 
		ifTrue: 
			[aCommandQuery isEnabled: (self hasMethodSelected and: [self sourceControl isConnected]).
			^true].
	^false! !
!Debugger categoriesFor: #browseMethodEditions!commands!public!source tracking system! !
!Debugger categoriesFor: #queryStsCommand:!commands!private! !

!Dialog methodsFor!

sourceControl
	^StsManager current! !
!Dialog categoriesFor: #sourceControl!constants!development!public! !

!MethodBrowser methodsFor!

browseMethodEditions
	self sourceControl browseMethodEditions: self selectedMethod selector
		class: self selectedMethod methodClass!

queryStsCommand: aCommandQuery 
	| selector |
	selector := aCommandQuery commandSymbol.
	#browseMethodEditions == selector 
		ifTrue: 
			[aCommandQuery isEnabled: (self hasMethodSelected and: [self sourceControl isConnected]).
			^true].
	^false! !
!MethodBrowser categoriesFor: #browseMethodEditions!commands!public!source tracking system! !
!MethodBrowser categoriesFor: #queryStsCommand:!commands!private! !

!Package methodsFor!

odbSerialize: serializer 
	^self name odbSerialize: serializer! !
!Package categoriesFor: #odbSerialize:!accessing!private! !

!PackageBrowserShell methodsFor!

browseLooseMethodEditions
	self sourceControl browseMethodEditions: self selectedMethod selector
		class: self selectedMethod methodClass!

queryStsCommand: aCommandQuery 
	| selector |
	selector := aCommandQuery commandSymbol.
	selector == #browseLooseMethodEditions 
		ifTrue: 
			[aCommandQuery isEnabled: (self hasMethodSelected and: [self sourceControl isConnected]).
			^true].
	^false! !
!PackageBrowserShell categoriesFor: #browseLooseMethodEditions!commands!public!source tracking system! !
!PackageBrowserShell categoriesFor: #queryStsCommand:!commands!private! !

!PackageSelector methodsFor!

browsePackageEditions
	self packages isEmpty ifTrue: [^self].
	self sourceControl browsePackageEditions: self packages first name!

compareWithAnotherEdition
	self packages isEmpty ifTrue: [^self].
	self sourceControl compareRepositoryEditionWithPackage: self packages first!

queryStsCommand: aCommandQuery 
	| selector |
	selector := aCommandQuery commandSymbol.
	(#(#versionPackage #browsePackageEditions #compareWithAnotherEdition) identityIncludes: selector) 
		ifTrue: 
			[aCommandQuery isEnabled: (self hasSelection and: [self sourceControl isConnected]).
			^true].
	^false!

versionPackage
	self packages isEmpty ifTrue: [^self].
	self sourceControl versionPackage: self packages first! !
!PackageSelector categoriesFor: #browsePackageEditions!commands!public! !
!PackageSelector categoriesFor: #compareWithAnotherEdition!commands!public! !
!PackageSelector categoriesFor: #queryStsCommand:!commands!private! !
!PackageSelector categoriesFor: #versionPackage!public! !

!SmalltalkSystem methodsFor!

sourceTrackingToolsFolder
	"Private - Answer the <SmalltalkSystemFolder> that holds the source tracking tools hierarchy."

	^self systemFolderNamed: 'Source Tracking Tools'! !
!SmalltalkSystem categoriesFor: #sourceTrackingToolsFolder!accessing!private! !

!SmalltalkToolShell methodsFor!

importPackageFromFile
	Cursor wait showWhile: [StsManager current importPackage]!

loadPackageFromRepository
	| edition |
	self sourceControl checkIfConnected ifFalse: [^self].
	(edition := StsPackageEditionPrompter 
				chooseWithDefault: (self packages isEmpty ifFalse: [self packages first])) isNil 
		ifFalse: [edition load]! !
!SmalltalkToolShell categoriesFor: #importPackageFromFile!commands!public! !
!SmalltalkToolShell categoriesFor: #loadPackageFromRepository!commands!public! !

!SourceManager methodsFor!

ignoreSeparators: stream 
	[stream atEnd or: [stream peek isSeparator not]] whileFalse: [stream next]!

nextItem: aStream 
	| item |
	item := ReadWriteStream on: String new.
	[aStream atEnd or: [aStream peek isSeparator]] whileFalse: [item nextPut: aStream next].
	^item contents!

nextItem: aStream separatorIn: inCharacter separatorOut: outCharacter 
	| string |
	string := ReadWriteStream on: String new.
	aStream peek = inCharacter 
		ifTrue: 
			[aStream next.
			[aStream atEnd or: [aStream peek = outCharacter]] whileFalse: 
					[aStream peek = inCharacter 
						ifTrue: 
							[string nextPut: inCharacter.
							string nextPutAll: (self 
										nextItem: aStream
										separatorIn: inCharacter
										separatorOut: outCharacter).
							string nextPut: outCharacter]
						ifFalse: [string nextPut: aStream next]].
			aStream next].
	^string contents!

nextItem: aStream timesRepeat: aNumber 
	aNumber - 1 timesRepeat: 
			[self nextItem: aStream.
			self ignoreSeparators: aStream].
	^self nextItem: aStream!

nextString: aStream 
	| string |
	string := ReadWriteStream on: String new.
	aStream peek = $' 
		ifTrue: 
			[aStream next.
			[aStream atEnd or: [aStream peek = $']] whileFalse: [string nextPut: aStream next].
			aStream next].
	^string contents! !
!SourceManager categoriesFor: #ignoreSeparators:!public! !
!SourceManager categoriesFor: #nextItem:!public! !
!SourceManager categoriesFor: #nextItem:separatorIn:separatorOut:!public! !
!SourceManager categoriesFor: #nextItem:timesRepeat:!public! !
!SourceManager categoriesFor: #nextString:!public! !

!String methodsFor!

byteCompare: str2 
	| length bytes1 bytes2 |
	length := self size max: str2 size.
	bytes1 := ByteArray new: length.
	bytes1 
		replaceFrom: 1
		to: self size
		with: self
		startingAt: 1.
	bytes2 := ByteArray new: length.
	bytes2 
		replaceFrom: 1
		to: str2 size
		with: str2
		startingAt: 1.
	^bytes1 odbIsLessOrEqualTo: bytes2! !
!String categoriesFor: #byteCompare:!converting!public! !

"End of package definition"!


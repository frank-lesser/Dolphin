| package |
package := Package name: 'Development System Tests'.
package paxVersion: 2.1;
	preDeclareClassesOnLoad: false;
	basicComment: ''.


package setClassNames: #(
	#{Kernel.Tests.CompiledMethodTest}
	#{Kernel.Tests.VMTest}
	#{OS.Tests.RegKeyTest}
	#{Smalltalk.ImageListViewTest}
	#{Smalltalk.KeyedAspectTest}
	#{Smalltalk.MenuPainterTest}
	#{Smalltalk.MethodCategoryEnvironmentTest}
	#{Smalltalk.PackageEnvironmentTest}
	#{Smalltalk.PluggableEnvironmentTest}
	#{Smalltalk.ProductReleaseTest}
	#{Smalltalk.RewriteTestCase}
	#{Smalltalk.SmalltalkSystemTest}
	#{Smalltalk.SmalltalkWorkspaceTest}
	#{Smalltalk.StStyler}
	#{Smalltalk.VersionResourceTest}
	#{Smalltalk.XMLDOMNodeTest}
).

package setMethodNames: #(
	#(#{External.Tests.INTEGERTest} #testPrintOnNull)
	#(#{External.Tests.INTEGERTest} #testPrintOnSigned)
	#(#{External.Tests.INTEGERTest} #testPrintOnUnsigned)
	#(#{UI.Tests.BorderLayoutTest} #testResourceBrowserPreview)
	#(#{UI.Tests.ScintillaViewTest} #testTokensFromTo)
).

package setPrerequisites: #(
	'..\..\..\Samples\MVP\Animal Game\Animals'
	'Development System'
	'..\..\Base\Dolphin'
	'..\..\Base\Dolphin Base Tests'
	'..\..\MVP\Base\Dolphin Basic Geometry'
	'..\..\MVP\Dialogs\Common\Dolphin Common Dialogs'
	'..\..\MVP\Base\Dolphin MVP Base'
	'..\..\MVP\Dolphin MVP Tests'
	'..\..\Registry\Dolphin Registry Access'
	'..\..\Lagoon\Lagoon Image Stripper'
	'..\..\ActiveX\COM\OLE COM'
	'..\..\..\..\Contributions\Refactory\Refactoring Browser\Environments\RBEnvironments'
	'..\..\..\..\Contributions\Refactory\Refactoring Browser\SmallLint\RBSmallLint'
	'..\..\..\..\Contributions\Refactory\Refactoring Browser\Tests\RBTests'
	'..\..\System\Compiler\Tests\Smalltalk Compiler Tests'
	'..\..\System\Compiler\Smalltalk Parser'
	'..\..\..\..\Contributions\Camp Smalltalk\SUnit\SUnit'
	'..\..\ActiveX\Components\XML DOM\XML DOM'
).

package!

"Class Definitions"!

Kernel.ParseNodeVisitor subclass: #StStyler
	instanceVariableNames: 'view arrayDepth'
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
XProgramming.SUnit.TestCase subclass: #RewriteTestCase
	instanceVariableNames: 'env'
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest subclass: #'Kernel.Tests.CompiledMethodTest'
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest subclass: #KeyedAspectTest
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest subclass: #MenuPainterTest
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest subclass: #ProductReleaseTest
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest subclass: #'OS.Tests.RegKeyTest'
	instanceVariableNames: 'testKey'
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest subclass: #SmalltalkSystemTest
	instanceVariableNames: 'devsys'
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest subclass: #VersionResourceTest
	instanceVariableNames: 'updatePath sourceModule sourceSize sourceBytes'
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest subclass: #'Kernel.Tests.VMTest'
	instanceVariableNames: 'expiryHandler'
	classVariableNames: ''
	imports: #(#{OS.CRTConstants})
	classInstanceVariableNames: ''
	classConstants: {}!
Core.Tests.DolphinTest subclass: #XMLDOMNodeTest
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
UI.Tests.PresenterTest subclass: #SmalltalkWorkspaceTest
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
UI.Tests.ImageViewAbstractTest subclass: #ImageListViewTest
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Refactory.Browser.Tests.BrowserEnvironmentTest subclass: #MethodCategoryEnvironmentTest
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Refactory.Browser.Tests.BrowserEnvironmentTest subclass: #PackageEnvironmentTest
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!
Refactory.Browser.Tests.BrowserEnvironmentTest subclass: #PluggableEnvironmentTest
	instanceVariableNames: ''
	classVariableNames: ''
	imports: #()
	classInstanceVariableNames: ''
	classConstants: {}!

"Loose Methods"!

!External.Tests.INTEGERTest methodsFor!

testPrintOnNull
	| subject |
	subject := DWORD new.
	self assert: subject printString equals: 'a DWORD(0)'!

testPrintOnSigned
	| subject |
	subject := SDWORD fromInteger: 123.
	self assert: subject printString equals: 'a SDWORD(123)'!

testPrintOnUnsigned
	| subject |
	subject := DWORD fromInteger: 123.
	self assert: subject printString equals: 'a DWORD(16r7B)'! !
!External.Tests.INTEGERTest categoriesFor: #testPrintOnNull!public!unit tests! !
!External.Tests.INTEGERTest categoriesFor: #testPrintOnSigned!public!unit tests! !
!External.Tests.INTEGERTest categoriesFor: #testPrintOnUnsigned!public!unit tests! !

!UI.Tests.BorderLayoutTest methodsFor!

testResourceBrowserPreview
	"#1758"

	| resourceId resourceView bmp toolbox resources |
	resourceId := ResourceIdentifier class: Smalltalk.ResourceBrowser name: 'Default view'.
	resourceView := 
			[Smalltalk developmentSystem loadViewResource: resourceId resource inContext: View desktop]
					on: Error
					do: [:x | ].
	bmp := resourceView notNil
				ifTrue: 
					[resourceView invalidateLayoutDeeply.
					Bitmap fromView: resourceView]
				ifFalse: [Error icon].
	toolbox := resourceView viewNamed: 'resourceToolbox'.
	resources := resourceView viewNamed: 'resources'.
	self assert: (resources viewNamed: 'resources') extent x equals: resources extent x.
	resourceView destroy! !
!UI.Tests.BorderLayoutTest categoriesFor: #testResourceBrowserPreview!public!unit tests! !

!UI.Tests.ScintillaViewTest methodsFor!

testTokensFromTo
	| tokens expected styler |
	presenter textStyles: Smalltalk.SmalltalkWorkspace textStyles.
	presenter stylerClass: Smalltalk.SmalltalkExpressionStyler.
	styler := Smalltalk.StStyler new.
	#('' ' ' ' 	 ' ' a' 'a ' ' a ' ' a #a' 'a #a ' ' a #a ' ' a #a 1.2 '''' ''blah blah'' (') do: 
			[:text |
			presenter text: text.
			presenter restyleAll.
			tokens := (presenter tokensFrom: 1 to: presenter textLength) asArray.
			expected := (Scanner on: presenter text readStream) contents
						collect: [:each | (styler styleNameFor: each) -> (text copyFrom: each start to: each stop)].
			self assert: tokens equals: expected]! !
!UI.Tests.ScintillaViewTest categoriesFor: #testTokensFromTo!public!unit tests! !

"End of package definition"!

